---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: chatboxx
spec:
  replicas: 3
  selector:
    matchLabels:
      role: app
  template:
    metadata:
      labels:
        role: app
    spec:
      affinity:
        # Use pod anti-affinity to force app deployment on different nodes.
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: role
                    operator: In
                    values:
                      - app
              topologyKey: kubernetes.io/hostname
      containers:
        - name: app
          image: alexandreroman/chatboxx
          imagePullPolicy: Always
          env:
            # Set where to find a ConfigMap for this pod (namespace and name).
            - name: SPRING_CLOUD_KUBERNETES_CONFIG_NAMESPACE
              value: "chatboxx"
            - name: SPRING_CLOUD_KUBERNETES_CONFIG_NAME
              value: "app"

            # Enable this actuator endpoint to support ConfigMap reloading.
            - name: MANAGEMENT_ENDPOINT_RESTART_ENABLED
              value: "true"
            # Enable ConfigMap reloading (disabled by default).
            - name: SPRING_CLOUD_KUBERNETES_RELOAD_ENABLED
              value: "true"
            - name: SPRING_CLOUD_KUBERNETES_RELOAD_STRATEGY
              value: "shutdown" # choose between refresh, restart_context or shutdown
          volumeMounts:
            # Mount GCP credentials as a volume: see chatboxx-02-config.yml for details.
            - name: gcp-credentials
              mountPath: /gcp
              readOnly: true
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              port: 8080
              path: /actuator/health
            initialDelaySeconds: 60
            periodSeconds: 2
          readinessProbe:
            httpGet:
              port: 8080
              path: /actuator/health
            initialDelaySeconds: 15
      volumes:
        - name: gcp-credentials
          secret:
            secretName: gcp-credentials
